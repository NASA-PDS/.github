name: Label-based Project Management

on:
  workflow_call:
    inputs:
      issue_number:
        description: 'Issue number'
        required: true
        type: number
      repository:
        description: 'Repository name (org/repo format)'
        required: true
        type: string
      label_name:
        description: 'Label that was added or removed'
        required: true
        type: string
      action:
        description: 'Action: labeled or unlabeled'
        required: true
        type: string
    secrets:
      gh_token:
        description: 'GitHub token with project write permissions'
        required: true

jobs:
  handle-label:
    runs-on: ubuntu-latest
    name: Handle label-based project automation

    steps:
      - name: Checkout scripts
        uses: actions/checkout@v4
        with:
          repository: NASA-PDS/.github
          sparse-checkout: |
            .github/scripts
          sparse-checkout-cone-mode: false

      - name: Process build label
        if: inputs.action == 'labeled' && startsWith(inputs.label_name, 'B')
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: |
          # Extract org from repository
          org=$(echo "${{ inputs.repository }}" | cut -d'/' -f1)

          # Run Python automation script
          python3 .github/scripts/project_automation.py \
            add-to-build-project \
            --repository "${{ inputs.repository }}" \
            --issue-number ${{ inputs.issue_number }} \
            --org "$org" \
            --label "${{ inputs.label_name }}"

      - name: Add to sprint when sprint-backlog label added
        if: inputs.action == 'labeled' && inputs.label_name == 'sprint-backlog'
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: |
          # Extract org from repository
          org=$(echo "${{ inputs.repository }}" | cut -d'/' -f1)

          # Run Python automation script
          python3 .github/scripts/project_automation.py \
            add-to-sprint \
            --repository "${{ inputs.repository }}" \
            --issue-number ${{ inputs.issue_number }} \
            --org "$org"

      - name: Remove from sprint when sprint-backlog label removed
        if: inputs.action == 'unlabeled' && inputs.label_name == 'sprint-backlog'
        env:
          GH_TOKEN: ${{ secrets.gh_token }}
        run: |
          # Extract org from repository
          org=$(echo "${{ inputs.repository }}" | cut -d'/' -f1)

          # Run Python automation script
          python3 .github/scripts/project_automation.py \
            remove-from-sprint \
            --repository "${{ inputs.repository }}" \
            --issue-number ${{ inputs.issue_number }} \
            --org "$org"
